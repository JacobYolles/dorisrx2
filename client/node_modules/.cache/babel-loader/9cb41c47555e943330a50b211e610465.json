{"ast":null,"code":"import _defineProperty from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Admin/Desktop/code/dorisrx/client/src/pages/User/User.js\";\nimport React, { Component } from \"react\";\n/* Import Components */\n\nimport CheckBox from \"../../components/checkBox/CheckBox\";\nimport Input from \"../../components/input/Input\";\nimport TextArea from \"../../components/textArea/TextArea\";\nimport Select from \"../../components/select/Select\";\nimport Button from \"../../components/button/Button\";\nimport Wrapper from \"../../components/wrapper/Wrapper\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport API2 from \"../../utilities/API2\"; // import {\n//   Row, Col, Card, CardBlock, Container, CardTitle, CardText\n// } from 'reactstrap';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(User)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      drugname: \"\",\n      bottleFullQuantity: \"\",\n      bottlePartialQuantity: \"\",\n      drugDose: \"\",\n      drugFrequency: \"\"\n    };\n\n    _this.loadInventory = function () {\n      API2.getInventories().then(function (res) {\n        return _this.setState({});\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleEventChange = function (event) {\n      var value = event.target.value;\n      var key = event.target.name;\n\n      _this.setState(_defineProperty({}, key, value), function () {\n        return console.log(_this.state);\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API2.getInventories({\n        drugname: _this.state.drugname,\n        bottleFullQuantity: _this.state.bottleFullQuantity,\n        bottlePartialQuantity: _this.state.bottlePartialQuantity,\n        drugDose: _this.state.drugDose,\n        drugFrequency: _this.state.drugFrequency,\n        bottleCount: _this.state.bottleCount\n      }).then(function (res) {\n        return _this.getInventories();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadInventory();\n    }\n  }, {\n    key: \"render\",\n    // save this for later again.\n    // handleFormSubmit(event) {\n    //   event.preventDefault();\n    //   let userData = this.state.newUser;\n    //   fetch(\"http://example.com\", {\n    //     method: \"POST\",\n    //     body: JSON.stringify(userData),\n    //     headers: {\n    //       \"Accept\": \"application/json\",\n    //       \"Content-Type\": \"application/json\"\n    //     },\n    //   }).then(response => {\n    //     response.json().then(data => {\n    //       console.log(\"Successful\" + data);\n    //     })\n    //   })\n    // }\n    // handleClearForm(event) {\n    //   event.preventDefault();\n    //   this.setState({\n    //     newUser: {\n    //       name: \"\",\n    //       pharmName: \"\",\n    //       doctorName: \"\",\n    //       age: \"\",\n    //       gender: \"\",\n    //       skills: [],\n    //       about: \"\"\n    //     },\n    //   })\n    // }\n    // in the render, change the values to display the needed state values to those that I have set above. \n    // drugname: \"\",\n    // bottleFullQuantity: \"\",\n    // bottlePartialQuantity: \"\",\n    // drugDose: \"\",\n    // drugFrequency: \"\",\n    // bottleCount: \"\"\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"container-fluid form\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Medication Name\",\n        name: \"drugname\",\n        value: this.state.drugname,\n        placeholder: \"Enter the medications name\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"number\",\n        title: \"Bottle Quantity\",\n        name: \"bottleFullQuantity\",\n        value: this.state.bottleFullQuantity,\n        placeholder: \"45\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"number\",\n        title: \"Bottle Quantity\",\n        name: \"bottlePartialQuantity\",\n        value: this.state.bottlePartialQuantity,\n        placeholder: \"25\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Drug Dose\",\n        name: \"drugDose\",\n        value: this.state.drugDose,\n        placeholder: \"Drug Dose\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Drug Frequency\",\n        name: \"drugFrequency\",\n        value: this.state.drugFrequency,\n        placeholder: \"Drug Frequency\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"number\",\n        title: \"Bottle Count\",\n        name: \"bottleCount\",\n        value: this.state.bottleCount,\n        placeholder: \"Bottle Count\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), \" \", React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: \"primary\",\n        title: \"Submit\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), \" \", React.createElement(Button, {\n        action: this.handleClearForm,\n        type: \"secondary\",\n        title: \"Clear\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), \" \")))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nvar buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default User;","map":{"version":3,"sources":["/Users/Admin/Desktop/code/dorisrx/client/src/pages/User/User.js"],"names":["React","Component","CheckBox","Input","TextArea","Select","Button","Wrapper","Col","Row","Container","API2","User","state","drugname","bottleFullQuantity","bottlePartialQuantity","drugDose","drugFrequency","loadInventory","getInventories","then","res","setState","catch","err","console","log","handleEventChange","event","value","target","key","name","handleFormSubmit","preventDefault","bottleCount","buttonStyle","handleClearForm","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n/* Import Components */\nimport CheckBox from \"../../components/checkBox/CheckBox\";\nimport Input from \"../../components/input/Input\";\nimport TextArea from \"../../components/textArea/TextArea\";\nimport Select from \"../../components/select/Select\";\nimport Button from \"../../components/button/Button\";\nimport Wrapper from \"../../components/wrapper/Wrapper\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport API2 from \"../../utilities/API2\";\n\n// import {\n//   Row, Col, Card, CardBlock, Container, CardTitle, CardText\n// } from 'reactstrap';\n\n\nclass User extends Component {\n  // constructor(props) {\n  //   super(props);\n\n// component did mount goes below the states.\nstate = {\n  drugname: \"\",\n  bottleFullQuantity: \"\",\n  bottlePartialQuantity: \"\",\n  drugDose: \"\",\n  drugFrequency: \"\",\n}\n\n\ncomponentDidMount() {\n  this.loadInventory(); \n}\n\nloadInventory = () => {\n  API2.getInventories()\n  .then(res =>\n    this.setState({ })\n    )\n    .catch(err => console.log(err))\n}\n\n  //   this.state = {\n  //     newUser: {\n  //       name: \"\",\n  //       age: \"\",\n  //       gender: \"\",\n  //       skills: [],\n  //       about: \"\",\n  //       password: \"\"\n  //     },\n\n  //     genderOptions: [\"Male\", \"Female\", \"Others\"],\n  //     skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n\n  //   }\n  //   this.handleTextArea = this.handleTextArea.bind(this);\n  //   this.handleAge = this.handleAge.bind(this);\n  //   this.handleFullName = this.handleFullName.bind(this);\n  //   this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  //   this.handleClearForm = this.handleClearForm.bind(this);\n  //   this.handleCheckBox = this.handleCheckBox.bind(this);\n  //   this.handleInput = this.handleInput.bind(this);\n\n  // }\n\n\n  // we will keep this. but maybe use it later.\n  // state = {\n  //   newUser: {\n  //     name: \"\",\n  //     pharmName: \"\",\n  //     doctorName: \"\",\n  //     age: \"\",\n  //     gender: \"\",\n  //     skills: [],\n  //     about: \"\",\n  //     password: \"\"\n  //   },\n\n  //   genderOptions: [\"Male\", \"Female\", \"Others\"],\n  //   skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n\n  // }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleEventChange = (event) => {\n    const value = event.target.value;\n    const key = event.target.name;\n\n\n    \n    this.setState({\n    [key]: value\n  }, () => console.log(this.state));\n};\n\n  //   this.setState(prevState => ({\n  //     newUser: { ...prevState.newUser, [key]: value }\n  //   }), () => console.log(this.state.newUser))\n  // }\n\n\nhandleFormSubmit = event => {\nevent.preventDefault();\nAPI2.getInventories({\n  drugname: this.state.drugname,\n  bottleFullQuantity: this.state.bottleFullQuantity,\n  bottlePartialQuantity: this.state.bottlePartialQuantity,\n  drugDose: this.state.drugDose,\n  drugFrequency: this.state.drugFrequency,\n  bottleCount: this.state.bottleCount\n})\n  .then(res => this.getInventories())\n  .catch(err => console.log(err))\n}\n\n\n// save this for later again.\n\n  // handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   let userData = this.state.newUser;\n\n  //   fetch(\"http://example.com\", {\n  //     method: \"POST\",\n  //     body: JSON.stringify(userData),\n  //     headers: {\n  //       \"Accept\": \"application/json\",\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //   }).then(response => {\n  //     response.json().then(data => {\n  //       console.log(\"Successful\" + data);\n  //     })\n  //   })\n  // }\n\n\n  // handleClearForm(event) {\n  //   event.preventDefault();\n  //   this.setState({\n  //     newUser: {\n  //       name: \"\",\n  //       pharmName: \"\",\n  //       doctorName: \"\",\n  //       age: \"\",\n  //       gender: \"\",\n  //       skills: [],\n  //       about: \"\"\n  //     },\n  //   })\n  // }\n\n  // in the render, change the values to display the needed state values to those that I have set above. \n\n  // drugname: \"\",\n  // bottleFullQuantity: \"\",\n  // bottlePartialQuantity: \"\",\n  // drugDose: \"\",\n  // drugFrequency: \"\",\n  // bottleCount: \"\"\n\n  render() {\n    return (\n\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Wrapper>\n              <form className=\"container-fluid form\" onSubmit={this.handleFormSubmit}>\n\n                <Input inputType={\"text\"}\n                  title={\"Medication Name\"}\n                  name={\"drugname\"}\n                  value={this.state.drugname}\n                  placeholder={\"Enter the medications name\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Name of the Medication */}\n\n                <Input inputType={\"number\"}\n                  title={\"Bottle Quantity\"}\n                  name={\"bottleFullQuantity\"}\n                  value={this.state.bottleFullQuantity}\n                  placeholder={\"45\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Bottle Quantity */}\n\n                <Input inputType={\"number\"}\n                  title={\"Bottle Quantity\"}\n                  name={\"bottlePartialQuantity\"}\n                  value={this.state.bottlePartialQuantity}\n                  placeholder={\"25\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Bottle Quantity */}\n\n                <Input inputType={\"text\"}\n                  title={\"Drug Dose\"}\n                  name={\"drugDose\"}\n                  value={this.state.drugDose}\n                  placeholder={\"Drug Dose\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Drug Dose */}\n\n                 <Input inputType={\"text\"}\n                  title={\"Drug Frequency\"}\n                  name={\"drugFrequency\"}\n                  value={this.state.drugFrequency}\n                  placeholder={\"Drug Frequency\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Drug Frequency */}\n\n                 <Input inputType={\"number\"}\n                  title={\"Bottle Count\"}\n                  name={\"bottleCount\"}\n                  value={this.state.bottleCount}\n                  placeholder={\"Bottle Count\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Bottle Count */}\n\n                {/* <Input inputType={\"text\"}\n                  title={\"Password\"}\n                  name={\"password\"}\n                  value={this.state.newUser.password}\n                  placeholder={\"Enter your password\"}\n                  handleChange={this.handleEventChange}\n\n                /> Name of the user */}\n\n                {/* <Input inputType={\"number\"}\n                  name={\"age\"}\n                  title={\"Age\"}\n                  value={this.state.newUser.age}\n                  placeholder={\"Enter your age\"}\n                  handleChange={this.handleEventChange} \n                  /> Age */}\n\n\n                {/* <Select title={\"Gender\"}\n                  name={\"gender\"}\n                  options={this.state.genderOptions}\n                  value={this.state.newUser.gender}\n                  placeholder={\"Select Gender\"}\n                  handleChange={this.handleEventChange}\n                /> Age Selection */}\n\n                {/* <CheckBox title={\"Skills\"}\n                  name={\"skills\"}\n                  options={this.state.skillOptions}\n                  selectedOptions={this.state.newUser.skills}\n                  handleChange={this.handleEventChange}\n                /> Skill */}\n\n                {/* <TextArea\n                  inputType=\"text\"\n                  title=\"About you.\"\n                  // rows={10}\n                  value={this.state.newUser.about}\n                  name=\"about\"\n                  handleChange={this.handleEventChange}\n                  placeholder=\"Describe your past experience and skills\" />About you */}\n\n                <Button\n                  action={this.handleFormSubmit}\n                  type={\"primary\"}\n                  title={\"Submit\"}\n                  style={buttonStyle}\n                /> { /*Submit */}\n\n                <Button\n                  action={this.handleClearForm}\n                  type={\"secondary\"}\n                  title={\"Clear\"}\n                  style={buttonStyle}\n                /> {/* Clear the form */}\n\n              </form>\n            </Wrapper>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n}\n\nexport default User;"]},"metadata":{},"sourceType":"module"}