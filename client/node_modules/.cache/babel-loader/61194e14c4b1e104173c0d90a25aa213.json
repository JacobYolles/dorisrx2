{"ast":null,"code":"import _defineProperty from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Admin/Desktop/code/dorisrx/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Admin/Desktop/code/dorisrx/client/src/pages/UserInput/UserInput.js\";\nimport React, { Component } from \"react\";\n/* Import Components */\n\nimport CheckBox from \"../../components/checkBox/CheckBox\";\nimport Input from \"../../components/input/Input\";\nimport TextArea from \"../../components/textArea/TextArea\";\nimport Select from \"../../components/select/Select\";\nimport Button from \"../../components/button/Button\";\nimport Wrapper from \"../../components/wrapper/Wrapper\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport API from \"../../utilities/API\"; // import {\n//   Row, Col, Card, CardBlock, Container, CardTitle, CardText\n// } from 'reactstrap';\n\nvar UserInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserInput, _Component);\n\n  function UserInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.loadDrugs = function () {\n      API.getInventory().then(function (res) {\n        return _this.setState({});\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      newUser: {\n        name: \"\",\n        pharmName: \"\",\n        doctorName: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\",\n        password: \"\"\n      },\n      genderOptions: [\"Male\", \"Female\", \"Others\"],\n      skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n      /* This lifecycle hook gets executed when the component mounts */\n\n    };\n\n    _this.handleEventChange = function (event) {\n      event.preventDefault();\n      var value = event.target.value;\n      var key = event.target.name;\n\n      _this.setState(function (prevState) {\n        return {\n          newUser: _objectSpread({}, prevState.newUser, _defineProperty({}, key, value))\n        };\n      }, function () {\n        return console.log(_this.state.newUser);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getInventory();\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(event) {\n      event.preventDefault();\n      var userData = this.state.newUser;\n      fetch(\"http://example.com\", {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        response.json().then(function (data) {\n          console.log(\"Successful\" + data);\n        });\n      });\n    }\n  }, {\n    key: \"handleClearForm\",\n    value: function handleClearForm(event) {\n      event.preventDefault();\n      this.setState({\n        newUser: {\n          name: \"\",\n          pharmName: \"\",\n          doctorName: \"\",\n          age: \"\",\n          gender: \"\",\n          skills: [],\n          about: \"\"\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"container-fluid form\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Pharmacy Name\",\n        name: \"pharmName\",\n        value: this.state.newUser.pharmName,\n        placeholder: \"Enter the pharmacies name\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Doctor's Name\",\n        name: \"doctorName\",\n        value: this.state.newUser.doctorName,\n        placeholder: \"Enter your doctors name\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"text\",\n        title: \"Password\",\n        name: \"password\",\n        value: this.state.newUser.password,\n        placeholder: \"Enter your password\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \" \", React.createElement(Input, {\n        inputType: \"number\",\n        name: \"age\",\n        title: \"Age\",\n        value: this.state.newUser.age,\n        placeholder: \"Enter your age\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), \" \", React.createElement(Select, {\n        title: \"Gender\",\n        name: \"gender\",\n        options: this.state.genderOptions,\n        value: this.state.newUser.gender,\n        placeholder: \"Select Gender\",\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), \" \", React.createElement(CheckBox, {\n        title: \"Skills\",\n        name: \"skills\",\n        options: this.state.skillOptions,\n        selectedOptions: this.state.newUser.skills,\n        handleChange: this.handleEventChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), \" \", React.createElement(TextArea, {\n        inputType: \"text\",\n        title: \"About you.\" // rows={10}\n        ,\n        value: this.state.newUser.about,\n        name: \"about\",\n        handleChange: this.handleEventChange,\n        placeholder: \"Describe your past experience and skills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Button, {\n        action: this.handleFormSubmit,\n        type: \"primary\",\n        title: \"Submit\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), \" \", React.createElement(Button, {\n        action: this.handleClearForm,\n        type: \"secondary\",\n        title: \"Clear\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), \" \")))));\n    }\n  }]);\n\n  return UserInput;\n}(Component);\n\nvar buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default UserInput;","map":{"version":3,"sources":["/Users/Admin/Desktop/code/dorisrx/client/src/pages/UserInput/UserInput.js"],"names":["React","Component","CheckBox","Input","TextArea","Select","Button","Wrapper","Col","Row","Container","API","UserInput","state","loadDrugs","getInventory","then","res","setState","catch","err","console","log","newUser","name","pharmName","doctorName","age","gender","skills","about","password","genderOptions","skillOptions","handleEventChange","event","preventDefault","value","target","key","prevState","userData","fetch","method","body","JSON","stringify","headers","response","json","data","handleFormSubmit","buttonStyle","handleClearForm","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n/* Import Components */\nimport CheckBox from \"../../components/checkBox/CheckBox\";\nimport Input from \"../../components/input/Input\";\nimport TextArea from \"../../components/textArea/TextArea\";\nimport Select from \"../../components/select/Select\";\nimport Button from \"../../components/button/Button\";\nimport Wrapper from \"../../components/wrapper/Wrapper\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport API from \"../../utilities/API\";\n\n// import {\n//   Row, Col, Card, CardBlock, Container, CardTitle, CardText\n// } from 'reactstrap';\n\n\nclass UserInput extends Component {\n  // constructor(props) {\n  //   super(props);\n\n// component did mount goes below the states.\nstate = {\n  \n}\n\n\ncomponentDidMount() {\n  this.getInventory();\n}\n\nloadDrugs = () => {\n  API.getInventory()\n  .then(res =>\n    this.setState({ })\n    )\n    .catch(err => console.log(err))\n}\n\n  //   this.state = {\n  //     newUser: {\n  //       name: \"\",\n  //       age: \"\",\n  //       gender: \"\",\n  //       skills: [],\n  //       about: \"\",\n  //       password: \"\"\n  //     },\n\n  //     genderOptions: [\"Male\", \"Female\", \"Others\"],\n  //     skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n\n  //   }\n  //   this.handleTextArea = this.handleTextArea.bind(this);\n  //   this.handleAge = this.handleAge.bind(this);\n  //   this.handleFullName = this.handleFullName.bind(this);\n  //   this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  //   this.handleClearForm = this.handleClearForm.bind(this);\n  //   this.handleCheckBox = this.handleCheckBox.bind(this);\n  //   this.handleInput = this.handleInput.bind(this);\n\n  // }\n\n  state = {\n    newUser: {\n      name: \"\",\n      pharmName: \"\",\n      doctorName: \"\",\n      age: \"\",\n      gender: \"\",\n      skills: [],\n      about: \"\",\n      password: \"\"\n    },\n\n    genderOptions: [\"Male\", \"Female\", \"Others\"],\n    skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleEventChange = (event) => {\n    event.preventDefault()\n    const value = event.target.value;\n    const key = event.target.name;\n\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser, [key]: value }\n    }), () => console.log(this.state.newUser))\n  }\n\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    let userData = this.state.newUser;\n\n    fetch(\"http://example.com\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      })\n    })\n  }\n\n\n  handleClearForm(event) {\n    event.preventDefault();\n    this.setState({\n      newUser: {\n        name: \"\",\n        pharmName: \"\",\n        doctorName: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      },\n    })\n  }\n\n\n  render() {\n    return (\n\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Wrapper>\n              <form className=\"container-fluid form\" onSubmit={this.handleFormSubmit}>\n\n                <Input inputType={\"text\"}\n                  title={\"Pharmacy Name\"}\n                  name={\"pharmName\"}\n                  value={this.state.newUser.pharmName}\n                  placeholder={\"Enter the pharmacies name\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Name of the Pharmacy */}\n\n                <Input inputType={\"text\"}\n                  title={\"Doctor's Name\"}\n                  name={\"doctorName\"}\n                  value={this.state.newUser.doctorName}\n                  placeholder={\"Enter your doctors name\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Name of the Pharmacy */}\n\n                <Input inputType={\"text\"}\n                  title={\"Password\"}\n                  name={\"password\"}\n                  value={this.state.newUser.password}\n                  placeholder={\"Enter your password\"}\n                  handleChange={this.handleEventChange}\n\n                /> {/* Name of the user */}\n\n                <Input inputType={\"number\"}\n                  name={\"age\"}\n                  title={\"Age\"}\n                  value={this.state.newUser.age}\n                  placeholder={\"Enter your age\"}\n                  handleChange={this.handleEventChange} /> {/* Age */}\n\n\n                <Select title={\"Gender\"}\n                  name={\"gender\"}\n                  options={this.state.genderOptions}\n                  value={this.state.newUser.gender}\n                  placeholder={\"Select Gender\"}\n                  handleChange={this.handleEventChange}\n                /> {/* Age Selection */}\n\n                <CheckBox title={\"Skills\"}\n                  name={\"skills\"}\n                  options={this.state.skillOptions}\n                  selectedOptions={this.state.newUser.skills}\n                  handleChange={this.handleEventChange}\n                /> {/* Skill */}\n\n                <TextArea\n                  inputType=\"text\"\n                  title=\"About you.\"\n                  // rows={10}\n                  value={this.state.newUser.about}\n                  name=\"about\"\n                  handleChange={this.handleEventChange}\n                  placeholder=\"Describe your past experience and skills\" />{/* About you */}\n\n                <Button\n                  action={this.handleFormSubmit}\n                  type={\"primary\"}\n                  title={\"Submit\"}\n                  style={buttonStyle}\n                /> { /*Submit */}\n\n                <Button\n                  action={this.handleClearForm}\n                  type={\"secondary\"}\n                  title={\"Clear\"}\n                  style={buttonStyle}\n                /> {/* Clear the form */}\n\n              </form>\n            </Wrapper>\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n}\n\nexport default UserInput;"]},"metadata":{},"sourceType":"module"}